plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.3.0'
}

group = 'de.vendor'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ORACLE
    }
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    runtimeOnly 'com.h2database:h2'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Enable preview features for Java 21
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '--enable-preview'
}

tasks.withType(Test).configureEach {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}

// Configure Gradle to use Java 21
tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

springBoot {
    mainClass = 'de.vendor.VendorApplication'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/api-spec.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "de.vendor.item.api"
    modelPackage = "de.vendor.item.model"
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: "true",
        skipDefaultInterface: "true",
        useSpringBoot3: "true",
        useJakartaEe: "true",
        openApiNullable: "false"
    ]
}

// Add generated sources to main source set
sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/src/main/java"
        }
    }
}

// Make sure the OpenAPI code is generated before compilation
compileJava.dependsOn('openApiGenerate')
